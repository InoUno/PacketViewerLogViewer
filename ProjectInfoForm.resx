<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveProjectDlg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="IL.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>149, 17</value>
  </metadata>
  <data name="IL.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAa
        DwAAAk1TRnQBSQFMAgEBBgEAARgBAAEYAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wYAAQ4EVgFPAewFAAHw
        AfMB/y8AAQcBVgFVAZgDwgFWAVUBVgQAAeoB9wHzAUMB8gH0Af8qAAGSAVUBlwefATQBVQMAAUMB9wT/
        AW0BvAH0Af8nAAFVAZcDngEnBZ4BLgFPAgABFQHvAa0G/wLvAfgkAAEhAS0DfQFJAf8BJwV9AS4B7AEA
        AeoBBwKmAqwBCQL/AfEBVQEuAf8jAAEtAXgCfQFJA/8BJwR9AS0BAgEAAewB7gGmBawBsgFQAS4BVQFW
        AfMhAAHzAS0CVgFJBf8BJwNWAZcBLQEAAQcB8AG0BKwBsgEPAS4BVQFWAX0BQyEAAe8BLgFWAUkD/wFy
        A/8BJwNWAS0BAALxAfADrAGyAdMBSQFVAVYCfQGfIQAB8QEuAVUBAgL/AScBVQFyA/8BJwJVATQB/wH0
        AvMCrQKyASIBigHUAVYBfQGfAcIBByEAAVUCLgECAScDLgFyA/8BJwJVAf8B9QLzAq0BswPUAdoBVgF9
        AZ8BngH/IQABTwFWBy0BcgH/AfMBLQFWAQ4B/wH1AvQBrAKzA9QBEQFWAX0BnwEJAf8hAAHzAVYBLQcC
        AXIBAgFVAVYCAAH1A/QBswHTAtQBZQFPAVYBfQESARkB7CMAAVcBLQcCAVUBVgEHAgAG/wHvAQIBLQFV
        AVYBEgIZAe0kAAJ9AQIDJwEtAn0BkgQAAfMBbQP/AfAB7AT/Ae8B7AHiJAAB8wGXAp8BwgKfAUkPAAHz
        ARIqAAHxAe8B8zwAAUUBJAoAAf8BbQLCAp8ChgGuAfMB9AL/AwAC/wH0AfEBAAETAW0BFAEOAfMB9AL/
        BwAB8gX/BPQFAAErAUwCOAFFCQAB6wKfAX0BnwFmAYYCZgGGBgABmANPAQIBTwFWARABDwEOCQAB8QH/
        AfAD8QHwAfIBvAHzBAABMgFMATEEOAGTBwABQwN9AZ8EigGmAYYEAAFPAVUGVgJDAhECAAH/Ae0EkgHx
        Av8E9APzAwACOAEyATECOAEyAjgB+wHzBAAB8gEPA30BnwasAYYCAAGYAcICTwJWAZcCeAGXARMBFAEV
        AREBAAH0A/8C9AHxBfQE8wIAASQCOAEyAVIBUwI4ATICOAH7AgAB/wH0AWYBAAJWAX0BnwOsAbICrAGt
        AfEBAAFPAfcBEQEVARQBAgFWAZgCngLqARIB7AH/AfQB/wH0AvIB8wHxAgcB8QHwAQcC8QHwAfMCAAEr
        AjgBMQJTBDgC+wMAAe0EVQF9AZ8BwgH2ARkBtAHTAawBCQGsAQAB7AHvARUBEwFJAXgCnwEIAcIBEgFt
        ARIBBwEVAfQB/wHyAQcB7wHwAvEC8AHyAfAB8wHxAQcB8wIAATEBOAEyA3oBTAFTAzgB+wMAAYYB6gMu
        AX0BnwHCAQkCGQHTAa0BtAGsAQAC7wEHARUBTwFWAVUBlwLCAXIB7AESAW0B6gH0Af8B8gG8AQcB8gHx
        AfMC8gPzAfIB8QHyAgACOAN6AQ4B2gFSAnoCOAExAgABhgHcAeoCLQF9AZ8B2wQZAdQBCQGsAQAB7wIH
        AbwC7AHtAfcB8AFyAfIB7QHsAa4BEgX0AfMB8AP0BPMB8gHxAQABKwF6A5oBDgOsAVIBegKaAVkBKgEA
        AYYBCQEZAWUBAgGfAbQBCQQZAQkBtAG1AQACBwHvAuwBkgH3Aa4D8gEIAa4BbQGuBvQB8AHyAfEC8wHy
        AfEB8gHxAQcB8QEHAXoCmgEOBawBdAOaAgABrgGmAawBsgFlAdQFGQGtAhkBswEAAewB6gFtAewB7QHy
        BPMB8gGuAVYBTwHrAvQB8gPxAfAB7wEHAfABBwHvAfIB7wGSAe8BAAFSAnoBDgGsBdMBrAF0ApoB8AIA
        AbQBrAGyAdMB1AEJARkB4gEZAeIDGQGtAQACEgHrAewBkgHsAfMD9AG8AfIBTwF4AW0C9AHxArwB8wHw
        ArwC8AEHAfEB/wHzBAABbgJ6AWUD1AEiAXoBmgGTBAABhgEZAawB0wHUAdsBGQG0AeIBtAIZAQkCAAHx
        AfABbQHsAfcB7wG8Au0B7wHxAfIBTwFWAU8B9AHzAfEB8ALxAbwD8gHxAfABvAH0Af8HAAGLA9sBIgHz
        BwABrQEZAQkB0wHUAQkC4gMZAbUDAAEVAfABvAHsAe8BvAL/AfQB8wHyAlYBLgH0BfMDBwHvAQcB7wEH
        Af8IAAGLAdwBCQHcAesJAAGsAhkBrQG0AxkBtQHPBQABEwHxAfIB9AHxA/QB8wHxAS4BTwEAAfQB8wPy
        AfEB8AEHAfANAAGLAxkB6woAAa4CrAOzAa0B/wcAAZIBbQL3AQcBkgG8Ae8BTwEnAgAB9ALyAvEB8AG8
        AfAuAAH/AQcBkgHwBgAH/wkAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAH4
        AQ8BjwH/BAAB4AEHAYAB/wQAAcABAwGAAR8EAAHAAQEBgAEHBAABgAEAAYABAwQAAYABAAGAAQEGAAGA
        AQEGAAGAAQEMAAGABwABgAcAAYABAQGABQABwAEBAYAFAAHgAQMBwAUAAfABDwH/AecEAAH+AT8C/wQA
        AfwB/wHAAQEBwAEBAfwBAAH4AT8B4AEHAeABBwH8AQAB8AEPAeABAwHAAQMCAAHgAQMBwAEBAYABAQIA
        AcABAwIAAYADAAHAAQMBgAEAAYADAAHAAQMBgAEAAYADAAHAAQEBgAEAAYADAAGAAQABgAEAAYAEAAEB
        AYABAAGAAwABgAEAAcABAAGAAgABAQHgAQMBwAEBAYACAAEBAfwBDwHgAQEBwAIAAQMB/AEfAfABAwHg
        AQEBAAF/AfwBHwH4AQcB8AEDAQAF/wH8AT8BAQH/Cw==
</value>
  </data>
</root>