<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveProjectDlg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="IL.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>149, 17</value>
  </metadata>
  <data name="IL.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        DQAAAk1TRnQBSQFMAgEBBQEAARABAAEQAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wYAAQ4EVgFPAew3AAEH
        AVYBVQGYA8IBVgFVAVY1AAGSAVUBlwefATQBVTQAAVUBlwOeAScFngEuAU8yAAEhAS0DfQFJAf8BJwV9
        AS4B7DEAAS0BeAJ9AUkD/wEnBH0BLQECMAAB8wEtAlYBSQX/AScDVgGXAS0wAAHvAS4BVgFJA/8BcgP/
        AScDVgEtMAAB8QEuAVUBAgL/AScBVQFyA/8BJwJVATQxAAFVAi4BAgEnAy4BcgP/AScCVTEAAU8BVgct
        AXIB/wHzAS0BVgEOMQAB8wFWAS0HAgFyAQIBVQFWNAABVwEtBwIBVQFWAQc1AAJ9AQIDJwEtAn0BkjYA
        AfMBlwKfAcICnwFJOwAB8QHvAfM8AAFFASQKAAH/AW0CwgKfAoYBrgHzAfQC/wMAAv8B9AHxAQABEwFt
        ARQBDgHzAfQC/wcAAfIF/wT0BQABKwFMAjgBRQkAAesCnwF9AZ8BZgGGAmYBhgYAAZgDTwECAU8BVgEQ
        AQ8BDgkAAfEB/wHwA/EB8AHyAbwB8wQAATIBTAExBDgBkwcAAUMDfQGfBIoBpgGGBAABTwFVBlYCQwIR
        AgAB/wHtBJIB8QL/BPQD8wMAAjgBMgExAjgBMgI4AfsB8wQAAfIBDwN9AZ8GrAGGAgABmAHCAk8CVgGX
        AngBlwETARQBFQERAQAB9AP/AvQB8QX0BPMCAAEkAjgBMgFSAVMCOAEyAjgB+wIAAf8B9AFmAQACVgF9
        AZ8DrAGyAqwBrQHxAQABTwH3AREBFQEUAQIBVgGYAp4C6gESAewB/wH0Af8B9ALyAfMB8QIHAfEB8AEH
        AvEB8AHzAgABKwI4ATECUwQ4AvsDAAHtBFUBfQGfAcIB9gEZAbQB0wGsAQkBrAEAAewB7wEVARMBSQF4
        Ap8BCAHCARIBbQESAQcBFQH0Af8B8gEHAe8B8ALxAvAB8gHwAfMB8QEHAfMCAAExATgBMgN6AUwBUwM4
        AfsDAAGGAeoDLgF9AZ8BwgEJAhkB0wGtAbQBrAEAAu8BBwEVAU8BVgFVAZcCwgFyAewBEgFtAeoB9AH/
        AfIBvAEHAfIB8QHzAvID8wHyAfEB8gIAAjgDegEOAdoBUgJ6AjgBMQIAAYYB3AHqAi0BfQGfAdsEGQHU
        AQkBrAEAAe8CBwG8AuwB7QH3AfABcgHyAe0B7AGuARIF9AHzAfAD9ATzAfIB8QEAASsBegOaAQ4DrAFS
        AXoCmgFZASoBAAGGAQkBGQFlAQIBnwG0AQkEGQEJAbQBtQEAAgcB7wLsAZIB9wGuA/IBCAGuAW0Brgb0
        AfAB8gHxAvMB8gHxAfIB8QEHAfEBBwF6ApoBDgWsAXQDmgIAAa4BpgGsAbIBZQHUBRkBrQIZAbMBAAHs
        AeoBbQHsAe0B8gTzAfIBrgFWAU8B6wL0AfID8QHwAe8BBwHwAQcB7wHyAe8BkgHvAQABUgJ6AQ4BrAXT
        AawBdAKaAfACAAG0AawBsgHTAdQBCQEZAeIBGQHiAxkBrQEAAhIB6wHsAZIB7AHzA/QBvAHyAU8BeAFt
        AvQB8QK8AfMB8AK8AvABBwHxAf8B8wQAAW4CegFlA9QBIgF6AZoBkwQAAYYBGQGsAdMB1AHbARkBtAHi
        AbQCGQEJAgAB8QHwAW0B7AH3Ae8BvALtAe8B8QHyAU8BVgFPAfQB8wHxAfAC8QG8A/IB8QHwAbwB9AH/
        BwABiwPbASIB8wcAAa0BGQEJAdMB1AEJAuIDGQG1AwABFQHwAbwB7AHvAbwC/wH0AfMB8gJWAS4B9AXz
        AwcB7wEHAe8BBwH/CAABiwHcAQkB3AHrCQABrAIZAa0BtAMZAbUBzwUAARMB8QHyAfQB8QP0AfMB8QEu
        AU8BAAH0AfMD8gHxAfABBwHwDQABiwMZAesKAAGuAqwDswGtAf8HAAGSAW0C9wEHAZIBvAHvAU8BJwIA
        AfQC8gLxAfABvAHwLgAB/wEHAZIB8AYAB/8JAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYA
        AQEWAAP/AQAB+AEPBgAB4AEHBgABwAEDBgABwAEBBgABgAcAAYAfAAGABwABgAcAAYABAQYAAcABAQYA
        AeABAwYAAfABDwYAAf4BPwYAAfwB/wHAAQEBwAEBAfwBAAH4AT8B4AEHAeABBwH8AQAB8AEPAeABAwHA
        AQMCAAHgAQMBwAEBAYABAQIAAcABAwIAAYADAAHAAQMBgAEAAYADAAHAAQMBgAEAAYADAAHAAQEBgAEA
        AYADAAGAAQABgAEAAYAEAAEBAYABAAGAAwABgAEAAcABAAGAAgABAQHgAQMBwAEBAYACAAEBAfwBDwHg
        AQEBwAIAAQMB/AEfAfABAwHgAQEBAAF/AfwBHwH4AQcB8AEDAQAF/wH8AT8BAQH/Cw==
</value>
  </data>
</root>